version: "3.8"

services:

  db:
    image: postgres:14
    env_file:
      - .env
    ports:
      - "${DOCKER_EXPOSE_PORT_POSTGRES:-5432}:5432"
    volumes:
      - ./.db/postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis
    restart: always
    ports:
      - "${DOCKER_EXPOSE_PORT_REDIS:-6379}:6379"
    volumes:
      - ./.redis_data:/data

  app:
    build:
      context: ./app
      dockerfile: ./Dockerfile
    env_file: .env
    command: >
      bash -c "
      poetry run python manage.py makemigrations --noinput &&
      poetry run python manage.py migrate --noinput &&
      poetry run python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./app:/code
    ports:
      - "${DOCKER_EXPOSE_PORT:-8000}:${DJANGO_PORT:-8000}"
    depends_on:
      - db

  worker:
    build:
      context: ./app
      dockerfile: ./Dockerfile
    env_file: .env
    command: >
      bash -c "poetry run python -m celery -A app worker --loglevel=info --concurrency 1 -E"
    volumes:
      - ./app:/code
    depends_on:
      - app

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
      target: production
    restart: always
    depends_on:
      - app
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - certbot-web:/vol/www
      - proxy-dhparams:/vol/proxy
      - certbot-certs:/etc/letsencrypt
    environment:
      - DOMAIN=${DOMAIN}

  certbot:
    build:
      context: ./certbot
    command: echo "Skipping..."
    environment:
      - EMAIL=${ACME_DEFAULT_EMAIL}
      - DOMAIN=${DOMAIN}
    volumes:
      - certbot-web:/vol/www
      - certbot-certs:/etc/letsencrypt/
    depends_on:
      - nginx

volumes:
  certbot-web:
  proxy-dhparams:
  certbot-certs: